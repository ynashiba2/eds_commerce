import{S as v}from"./chunks/is-number.js";import{R as H,V as U,c as X,a as Y,d as Z,g as x,i as ee}from"./chunks/is-number.js";import{C as te,I as oe,i as ne}from"./chunks/initializer.js";import{jsx as M}from"./preact-jsx-runtime.js";import{x as P,A as R,h as _,T as E,E as O,q as a,y as D}from"./chunks/icons/Add.js";import{IntlContext as V}from"./i18n.js";import{g as ie,s as le}from"./chunks/image-params-keymap.js";import"./signals.js";const J=t=>{const o=new FormData(t);return Object.fromEntries(o)},K=t=>{const o=new FormData(t),c=Object.fromEntries(o);return Object.entries(c).reduce((u,[g])=>{const n=t.elements[g];return n!=null&&n.validationMessage?{...u,[g]:n.validationMessage}:{...u}},{})},k=t=>t.replace("_","-");function j(t,o={},c,h,u){const g=P(v),n=R(null),S=R("pending"),w=R([]),[y,b]=_({children:[h]}),[N,$]=_({}),I=E(()=>({get:r=>N[r],set:(r,e)=>{$({...I,[r]:e})}}),[N]),{intl:B}=P(V);o.dictionary=B.dictionary,o._setProps=r=>{b(e=>{const s=typeof r=="function"?r(e):r;if(u){const i=O(u(e),{key:"render"}),p=e.children.findIndex(d=>(d==null?void 0:d.key)==="render");e.children[p]=i}return s})};const l=a(r=>{typeof r=="function"?w.current.push(r):console.warn("Skipped: Invalid _registerMethod",r)},[]);o._registerMethod=l;const f=a(r=>M("div",{"data-slot-html-element":r.tagName.toLowerCase(),ref:e=>{e==null||e.appendChild(r)}}),[]);o._htmlElementToVNode=f,o.getSlotElement=a(r=>{var s,i;const e=(s=n.current)==null?void 0:s.querySelector(`[data-slot-key="${r}"]`);if(m(`ðŸŸ¦ "${t}" Slot getSlotElement: ${r}`,(i=n.current)==null?void 0:i.cloneNode(!0),e==null?void 0:e.cloneNode(!0)),!!e)return{appendChild:p=>{e.appendChild(p)},prependChild:p=>{e.insertBefore(p,e.firstChild)},appendSibling:p=>{const d=e.parentNode;d==null||d.insertBefore(p,e.nextSibling)},prependSibling:p=>{const d=e.parentNode;d==null||d.insertBefore(p,e)}}},[t]),o.onRender=a(r=>{w.current.push(r)},[]),o.onChange=o.onRender,o.replaceWith=a(r=>{l(e=>{const s=f(r);e._setProps({children:[s]})})},[f,l]),o.appendChild=a(r=>{l(e=>{const s=f(r);e._setProps(i=>({...i,children:[...i.children,s]}))})},[f,l]),o.prependChild=a(r=>{l(e=>{const s=f(r);e._setProps(i=>({...i,children:[s,...i.children]}))})},[f,l]),o.appendSibling=a(r=>{l(()=>{var s,i;const e=(s=n.current)==null?void 0:s.parentNode;e==null||e.insertBefore(r,((i=n.current)==null?void 0:i.nextSibling)??null)})},[l]),o.prependSibling=a(r=>{l(()=>{var s;const e=(s=n.current)==null?void 0:s.parentNode;e==null||e.insertBefore(r,n.current)})},[l]);const C=a(async()=>{if(S.current==="loading")return;S.current="loading",m(`ðŸŸ¨ "${t}" Slot Rendered`);const r=u?O(u(y),{key:"render"}):null;b({children:[r??h]}),w.current.forEach(e=>{e(o,I)}),S.current="ready"},[h,o,t,y,u,I]),L=a(async()=>{if(c)try{S.current="loading",m(`ðŸŸ© "${t}" Slot Initialized`),await c(o,n.current)}catch(r){console.error(`Error in "${c.name}" Slot callback`,r)}finally{S.current="ready",await C()}},[c,o,C,t]);return D(()=>{L().finally(()=>{g&&(g.value.delete(t),g.value=new Set(g.value))})},[]),D(()=>{C()},[JSON.stringify(o),JSON.stringify(N)]),[n,y]}function A({name:t,context:o,slot:c,children:h,render:u,...g}){const n=P(v),[S,w]=j(t,o,c,h,u);return E(()=>{if(!t)return console.warn('Slot "name" is required');n&&(n.value.add(t),n.value=new Set(n.value))},[t,n]),M("div",{...g,ref:S,"data-slot":t,children:w.children})}window.DROPINS=window.DROPINS||{};window.DROPINS.showSlots=async t=>{window.sessionStorage.setItem("dropin-debugger--show-slots",t.toString()),document.body.classList.toggle("dropin-debugger--show-slots",t)};let m=()=>{};window.DROPINS.logSlots=async t=>{window.sessionStorage.setItem("dropin-debugger--log-slots",t.toString()),m=t?(...o)=>console.log(...o):()=>{}};window.DROPINS.showSlots(window.sessionStorage.getItem("dropin-debugger--show-slots")==="true");window.DROPINS.logSlots(window.sessionStorage.getItem("dropin-debugger--log-slots")==="true");export{te as Config,oe as Initializer,H as Render,A as Slot,v as SlotQueueContext,U as VComponent,X as classes,Y as debounce,Z as deepmerge,x as generateSrcset,K as getFormErrors,J as getFormValues,ie as getImageParamsKeyMap,ne as initializers,ee as isNumber,le as setImageParamsKeyMap,k as toLanguageTag,j as useSlot};
