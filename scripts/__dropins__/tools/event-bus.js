var a=Object.defineProperty;var d=(n,e,t)=>e in n?a(n,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):n[e]=t;var r=(n,e,t)=>d(n,typeof e!="symbol"?e+"":e,t);const f=Date.now().toString(36).substring(2);class l{static on(e,t,i){if(typeof BroadcastChannel>"u")return;const o=new BroadcastChannel("ElsieSDK/EventBus");if(i!=null&&i.eager){const s=this._lastEvent[e];s&&t(s.payload)}return o.addEventListener("message",({data:s})=>{this._identifier&&this._identifier!==s.identifier||s.event===e&&t(s.payload)}),window.addEventListener("beforeunload",()=>{o.close()}),{off(){o.close()}}}static emit(e,t){if(typeof BroadcastChannel>"u")return;const i=new BroadcastChannel("ElsieSDK/EventBus");i.postMessage({event:e,identifier:this._identifier,payload:t}),this._lastEvent[e]={payload:t},i.close()}static enableLogger(e){var t;typeof BroadcastChannel>"u"||((t=this._logger)==null||t.close(),this._logger=null,e!==!1&&(this._logger=new BroadcastChannel("ElsieSDK/EventBus"),this._logger.addEventListener("message",({data:i})=>{this._identifier&&this._identifier!==i.identifier||(console.group(`ðŸ“¡ Event (${i.identifier}) âž¡ ${i.event}`),console.log(i.payload),console.groupEnd())}),window.addEventListener("beforeunload",()=>{var i;(i=this._logger)==null||i.close()})))}}r(l,"_identifier",f),r(l,"_logger",null),r(l,"_lastEvent",{});export{l as events};
